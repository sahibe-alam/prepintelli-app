import RNHTMLtoPDF from 'react-native-html-to-pdf';
import RNFS from 'react-native-fs';
import { Platform } from 'react-native';

const downloadPDF = async (html_code: string, file_name: string) => {
  try {
    // Add padding to the HTML content
    const html_with_padding = `
      <html>
        <head>
          <style>
            body {
              padding: 20px; /* Adjust the padding as needed */
            }
            .logo{
            text-align: left;
            background: rgb(93,110,255);
background: linear-gradient(204deg, rgba(93,110,255,1) 0%, rgba(161,58,201,1) 100%);
            padding: 8px;
            display: flex;
            align-items: center;
            gap: 40px;
            }
            .logo img{
            width: 70px;
            height: 70px;
            object-fit: contain;
            }

              .disclaimer-container {
            font-family: Arial, sans-serif;
            margin-top: 20px;
            margin-bottom: 20px;
            line-height: 1.6;
        }
        .disclaimer-box {
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 15px;
            background-color: #f9f9f9;
        }
        .disclaimer-header {
            color: #333;
            font-size: 18px;
            margin-bottom: 10px;
        }
        .disclaimer-text {
            margin: 10px 0;
        }
        .disclaimer-text strong {
            display: block;
            margin-bottom: 5px;
        }
          </style>
        </head>
        <body>
        <div class="logo">
        <img src="https://firebasestorage.googleapis.com/v0/b/prepintelli-c45bb.appspot.com/o/white-logo.svg?alt=media&token=f21d9777-86fa-4a22-b05a-db63be91378f" width="100" height="50"/>

        <h2 style="color:#fff">PrepIntelli app: AI-powered exam prep companion</h2>
        </div>
          ${html_code}

          <div class="disclaimer-container">
        <div class="disclaimer-box">
            <div class="disclaimer-header">Disclaimer</div>
            <div class="disclaimer-text">
                <strong>General Guidance:</strong> The study plan generated by this app is based on the responses provided by the user and may not account for all individual circumstances. The recommendations are intended to serve as a general guide and should be adjusted according to personal needs and preferences.
            </div>
            <div class="disclaimer-text">
                <strong>Professional Advice:</strong> Always consult with teachers or educational professionals for tailored guidance.
            </div>
            <div class="disclaimer-text">
                Use the study plan at your own discretion and responsibility.
            </div>
        </div>
    </div>
        </body>
      </html>
    `;

    const options = {
      html: html_with_padding,
      fileName: file_name,
      directory:
        Platform.OS === 'ios'
          ? RNFS.LibraryDirectoryPath
          : RNFS.DownloadDirectoryPath,
      base64: false,
    };

    const file = await RNHTMLtoPDF.convert(options);
    const localUrl = file.filePath;

    let destPath;
    let fileNameUnique = file_name;
    let count = 0;
    do {
      destPath = `${
        Platform.OS === 'ios'
          ? RNFS.LibraryDirectoryPath
          : RNFS.DownloadDirectoryPath
      }/${fileNameUnique}`;
      if (await RNFS.exists(destPath)) {
        count++;
        fileNameUnique = `${file_name}${count}.pdf`;
      }
    } while (await RNFS.exists(destPath));

    await RNFS.copyFile(localUrl as string, destPath);
    console.log(destPath);

    return destPath; // Resolve with the path to the generated PDF
  } catch (error) {
    console.error(error);
    throw error; // Reject with the error
  }
};

export default downloadPDF;
